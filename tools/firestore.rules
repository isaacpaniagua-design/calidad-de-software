rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isTeacher() {
      return exists(/databases/$(database)/documents/teachers/$(request.auth.uid));
    }

    // --- Core Collections ---

    match /activities/{activityId} {
      allow read: if request.auth != null;
      allow write: if isTeacher();
    }
    
    match /submissions/{submissionId} {
      // Teachers can read any submission. A student can read their own.
      allow get: if isTeacher() || request.auth.uid == resource.data.studentUid;
      
      // Students can query for their own submissions. Teachers can query for any.
      allow list: if isTeacher() || (request.auth.uid == request.query.filters.studentUid);

      // A user can write to a submission if they are a teacher (for grading) 
      // or the student who owns it (for submitting).
      allow write: if isTeacher() || request.auth.uid == resource.data.studentUid;
    }

    // --- Administrative & User Data Collections ---

    match /students/{studentId} {
      allow read: if isTeacher() || request.auth.uid == resource.data.authUid;
      allow write: if isTeacher();
    }
    
    match /teachers/{teacherId} {
      allow read: if isTeacher();
      allow write: if false; 
    }

    // Grades: Restoring this collection for 'calificaciones-logic.js' with secure rules.
    match /grades/{gradeId} {
      // Allow a user to get a specific document if they are a teacher or own the document.
      allow get: if isTeacher() || request.auth.uid == resource.data.authUid;
      // Allow a user to list documents only if they are a teacher or are querying by their own user ID.
      allow list: if isTeacher() || (request.query.filters.authUid == request.auth.uid);
      // Only teachers can create or update grades.
      allow write: if isTeacher();
    }
  }
}
