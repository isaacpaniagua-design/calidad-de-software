rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Función para verificar si un usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función para obtener el rol del usuario desde los Custom Claims
    function getUserRole() {
      return request.auth.token.role;
    }

    // --- REGLAS PRINCIPALES ---

    // Colección de Estudiantes
    match /students/{studentId} {
      allow read: if getUserRole() == 'docente';
      allow write: if false; // Proteger la lista de estudiantes
    }

    // Calificaciones
    match /courses/{courseId}/grades/{studentId} {
      allow read: if getUserRole() == 'docente' || request.auth.uid == studentId;
      allow write: if getUserRole() == 'docente';
    }
    
    // Entregas de Evidencias (Submissions)
    match /courses/{courseId}/submissions/{studentId}/{document=**} {
       allow read, write: if getUserRole() == 'docente' || request.auth.uid == studentId;
    }

    // --- REGLAS PARA MATERIALES (CORREGIDO) ---
// Colección de Materiales
match /materials/{materialId} {
  // Permite a CUALQUIER usuario autenticado leer la lista de materiales o un material específico.
  allow read: if isAuthenticated();
  
  // SOLO permite escribir (crear, actualizar, borrar) a usuarios
  // cuyo ID de autenticación exista como un documento en la colección 'teachers'.
  allow write: if request.auth != null && exists(/databases/$(database)/documents/teachers/$(request.auth.uid));
}

// Entregas de estudiantes (studentUploads)
match /studentUploads/{uploadId} {
  // REGLA #1: DOCENTES
  // Un docente tiene acceso total. 'read' incluye 'get' y 'list'.
  // 'write' incluye 'create', 'update' y 'delete'.
  // Esta regla le da el permiso a 'observeAllStudentUploads' para funcionar.
  allow read, write: if request.auth != null && exists(/databases/$(database)/documents/teachers/$(request.auth.uid));

  // REGLA #2: ESTUDIANTES (Permisos adicionales y específicos)
  
  // Permitir que un estudiante CREE un documento si el `student.uid`
  // en los datos del nuevo documento es su propio UID.
  allow create: if request.auth.uid == request.resource.data.student.uid;

  // Permitir que un estudiante LEA (get) y ACTUALICE un documento existente
  // si el `student.uid` guardado en el documento coincide con su UID.
  // **Importante:** 'get' no es lo mismo que 'list'. Esta regla no les permite ver las entregas de otros.
  allow get, update: if request.auth.uid == resource.data.student.uid;
}

      // Los docentes pueden leer, actualizar y eliminar cualquier entrega.
     // Se combina con la regla de estudiante para que un docente también pueda leer su propia entrega si fuera el caso.
      allow read, update, delete: if getUserRole() == 'docente';
   }

// Colección de Estudiantes
match /students/{studentId} {
  allow read: if getUserRole() == 'docente' || request.auth.uid == studentId;
  allow write: if false; // Proteger la lista de estudiantes
}
    // --- REGLAS ADICIONALES PARA EVITAR ERRORES EN OTRAS PÁGINAS ---
    
   // Temas del Foro y sus subcolecciones (respuestas)
match /forum_topics/{topicId} {
  // Permite a cualquier usuario autenticado leer, crear, actualizar o borrar temas.
  allow read, create, update, delete: if isAuthenticated();

  // Reglas para las subcolecciones (si las tienes, como 'replies')
  match /replies/{replyId} {
    allow read, create, update, delete: if isAuthenticated();
  }
}
}
